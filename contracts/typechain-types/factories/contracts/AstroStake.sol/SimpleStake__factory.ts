/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleStake,
  SimpleStakeInterface,
} from "../../../contracts/AstroStake.sol/SimpleStake";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_erc20Token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_stakeInterestRateWithFourDecimalsWithFoursDecimals",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakeLockTimeDays",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "stakedAmount",
        type: "uint256",
      },
    ],
    name: "NewStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "stakedAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "UnStake",
    type: "event",
  },
  {
    inputs: [],
    name: "Erc20Token",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInterestRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSenderCurrentStakeDays",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSenderStake",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct SimpleStake.Stake",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakeLockTimeDay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasEverStakedTracker",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isCurrentlyStakingTracker",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastStakesRegistry",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountToStakeInWei",
        type: "uint256",
      },
    ],
    name: "stakeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakersAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unStakeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newInterestRateWithFourDecimals",
        type: "uint256",
      },
    ],
    name: "updateInterestRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newLockTime",
        type: "uint256",
      },
    ],
    name: "updateStakeLockTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610abc380380610abc83398101604081905261002f916100b4565b61003833610064565b600180546001600160a01b0319166001600160a01b0394909416939093179092556006556007556100f7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156100c957600080fd5b83516001600160a01b03811681146100e057600080fd5b602085015160409095015190969495509392505050565b6109b6806101066000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063752a50a61161009757806395a1eba11161006657806395a1eba114610211578063b066d0621461024d578063c3dd76e214610280578063f2fde38b146102a357600080fd5b8063752a50a6146101d25780637547c7a3146101e55780637896bf1d146101f85780638da5cb5b1461020057600080fd5b80635257b566116100d35780635257b566146101645780636905ce261461016c578063715018a6146101b7578063751408c5146101bf57600080fd5b806308262b421461010557806328d0f3041461011a5780632c5b0df6146101315780632d2079291461015c575b600080fd5b61011861011336600461085a565b6102b6565b005b6007545b6040519081526020015b60405180910390f35b600154610144906001600160a01b031681565b6040516001600160a01b039091168152602001610128565b61011e6102ee565b60065461011e565b60408051808201825260008082526020918201819052338152600382528290208251808401845281548082526001909201549083019081528351918252519181019190915201610128565b610118610325565b6101446101cd36600461085a565b61035b565b6101186101e036600461085a565b610385565b6101186101f336600461085a565b6103b4565b610118610445565b6000546001600160a01b0316610144565b61023861021f366004610873565b6003602052600090815260409020805460019091015482565b60408051928352602083019190915201610128565b61027061025b366004610873565b60056020526000908152604090205460ff1681565b6040519015158152602001610128565b61027061028e366004610873565b60046020526000908152604090205460ff1681565b6101186102b1366004610873565b61055e565b6000546001600160a01b031633146102e95760405162461bcd60e51b81526004016102e0906108a3565b60405180910390fd5b600755565b3360009081526003602090815260408083208151808301909252805482526001015491810191909152610320906105f6565b905090565b6000546001600160a01b0316331461034f5760405162461bcd60e51b81526004016102e0906108a3565b610359600061061c565b565b6002818154811061036b57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146103af5760405162461bcd60e51b81526004016102e0906108a3565b600655565b600081116104045760405162461bcd60e51b815260206004820152601760248201527f7374616b696e6720616d6f756e7420726571756972656400000000000000000060448201526064016102e0565b61040d8161066c565b3360009081526005602090815260408083208054600160ff199182168117909255600490935292208054909116909117905550565b50565b3360009081526005602052604090205460ff166104925760405162461bcd60e51b815260206004820152600b60248201526a6e6f74207374616b696e6760a81b60448201526064016102e0565b60006104ce6040805180820182526000808252602091820181905233815260038252829020825180840190935280548352600101549082015290565b905060006104da6102ee565b90506104e560075490565b8110156105345760405162461bcd60e51b815260206004820152601960248201527f6c6f636b2074696d6520686173206e6f7420657870697265640000000000000060448201526064016102e0565b61053e8282610754565b61055a336000908152600560205260409020805460ff19169055565b5050565b6000546001600160a01b031633146105885760405162461bcd60e51b81526004016102e0906108a3565b6001600160a01b0381166105ed5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102e0565b6104428161061c565b60006201518082602001514261060c91906108ee565b6106169190610905565b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156106be57600080fd5b505af11580156106d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f69190610927565b50604080518082018252828152426020808301918252336000818152600390925284822093518455915160019093019290925591518392917f42e99fbad9601d25ee3bb515eeee966f97c3c383adadbe5720f651df8c18989d91a350565b6000620186a082600654856000015161076d9190610949565b6107779190610949565b6107819190610905565b60015484519192506001600160a01b03169063a9059cbb9033906107a6908590610968565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156107ec57600080fd5b505af1158015610800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108249190610927565b50825160405182919033907f54a9763035584fc4fcad1bc4e0e7a83f93e016f50ae32bd527530a77257393ee90600090a4505050565b60006020828403121561086c57600080fd5b5035919050565b60006020828403121561088557600080fd5b81356001600160a01b038116811461089c57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015610900576109006108d8565b500390565b60008261092257634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561093957600080fd5b8151801515811461089c57600080fd5b6000816000190483118215151615610963576109636108d8565b500290565b6000821982111561097b5761097b6108d8565b50019056fea26469706673582212209bd4b3a19e5a23910026bfd85ede2555112408b68b4d19031973045e59844b3364736f6c63430008090033";

type SimpleStakeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleStakeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleStake__factory extends ContractFactory {
  constructor(...args: SimpleStakeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc20Token: string,
    _stakeInterestRateWithFourDecimalsWithFoursDecimals: BigNumberish,
    _stakeLockTimeDays: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleStake> {
    return super.deploy(
      _erc20Token,
      _stakeInterestRateWithFourDecimalsWithFoursDecimals,
      _stakeLockTimeDays,
      overrides || {}
    ) as Promise<SimpleStake>;
  }
  override getDeployTransaction(
    _erc20Token: string,
    _stakeInterestRateWithFourDecimalsWithFoursDecimals: BigNumberish,
    _stakeLockTimeDays: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc20Token,
      _stakeInterestRateWithFourDecimalsWithFoursDecimals,
      _stakeLockTimeDays,
      overrides || {}
    );
  }
  override attach(address: string): SimpleStake {
    return super.attach(address) as SimpleStake;
  }
  override connect(signer: Signer): SimpleStake__factory {
    return super.connect(signer) as SimpleStake__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleStakeInterface {
    return new utils.Interface(_abi) as SimpleStakeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleStake {
    return new Contract(address, _abi, signerOrProvider) as SimpleStake;
  }
}
