/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20TokensSwap,
  ERC20TokensSwapInterface,
} from "../../contracts/ERC20TokensSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_quoteToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_exchangeRate",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "scaledPrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timeStamp",
        type: "uint256",
      },
    ],
    name: "Rate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "exchangeType",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "sellingAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "buyingAmount",
        type: "uint256",
      },
    ],
    name: "SwapRateInfo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amountSent",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amountReceived",
        type: "uint256",
      },
    ],
    name: "SwapTransferInfo",
    type: "event",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseTokenAmount",
        type: "uint256",
      },
    ],
    name: "getAskPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvailableBaseTokenLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvailableQuoteTokenLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quoteTokenAmount",
        type: "uint256",
      },
    ],
    name: "getBidPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_scalingDecimal",
        type: "uint8",
      },
    ],
    name: "getScaledRate",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pairName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quoteToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseTokenAmount",
        type: "uint256",
      },
    ],
    name: "swapBaseForQuoteToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quoteTokenAmount",
        type: "uint256",
      },
    ],
    name: "swapQuoteForBaseToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526002805460ff191660121790553480156200001e57600080fd5b506040516200149f3803806200149f8339810160408190526200004191620002dc565b600080546001600160a01b038084166001600160a01b03199283161783556002805486831661010002610100600160a81b031990911617905560038054918716919092168117909155604080516395d89b4160e01b81529051620001ae936395d89b419260048082019391829003018186803b158015620000c157600080fd5b505afa158015620000d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000100919081019062000379565b604051806040016040528060018152602001602f60f81b815250600260019054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156200016957600080fd5b505afa1580156200017e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001a8919081019062000379565b620001ce565b8051620001c4916001916020909101906200021d565b50505050620004a1565b6060620001e7620001e08585620001ef565b83620001ef565b949350505050565b606082826040516020016200020692919062000431565b604051602081830303815290604052905092915050565b8280546200022b9062000464565b90600052602060002090601f0160209004810192826200024f57600085556200029a565b82601f106200026a57805160ff19168380011785556200029a565b828001600101855582156200029a579182015b828111156200029a5782518255916020019190600101906200027d565b50620002a8929150620002ac565b5090565b5b80821115620002a85760008155600101620002ad565b6001600160a01b0381168114620002d957600080fd5b50565b600080600060608486031215620002f257600080fd5b8351620002ff81620002c3565b60208501519093506200031281620002c3565b60408501519092506200032581620002c3565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200036357818101518382015260200162000349565b8381111562000373576000848401525b50505050565b6000602082840312156200038c57600080fd5b81516001600160401b0380821115620003a457600080fd5b818401915084601f830112620003b957600080fd5b815181811115620003ce57620003ce62000330565b604051601f8201601f19908116603f01168101908382118183101715620003f957620003f962000330565b816040528281528760208487010111156200041357600080fd5b6200042683602083016020880162000346565b979650505050505050565b600083516200044581846020880162000346565b8351908301906200045b81836020880162000346565b01949350505050565b600181811c908216806200047957607f821691505b602082108114156200049b57634e487b7160e01b600052602260045260246000fd5b50919050565b610fee80620004b16000396000f3fe6080604052600436106100915760003560e01c80639d0ba183116100595780639d0ba1831461015d578063ad5d203c1461017d578063c55dae6314610192578063c8a24fb1146101b2578063d880c370146101c757600080fd5b80630c57004a14610096578063217a4b70146100c9578063217eb0ae1461010657806340794c3b1461011b5780639b013aee1461013d575b600080fd5b3480156100a257600080fd5b506100b66100b1366004610adc565b6101da565b6040519081526020015b60405180910390f35b3480156100d557600080fd5b506002546100ee9061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016100c0565b34801561011257600080fd5b506100b66102dd565b34801561012757600080fd5b506101306102fa565b6040516100c09190610b21565b34801561014957600080fd5b506100b6610158366004610adc565b610388565b34801561016957600080fd5b506100b6610178366004610b66565b6103c5565b61019061018b366004610adc565b610525565b005b34801561019e57600080fd5b506003546100ee906001600160a01b031681565b3480156101be57600080fd5b506100b66106ab565b6101906101d5366004610adc565b6106c8565b6000806101e68361079e565b9050808361029a60405180604001604052806004815260200163020b9b5960e51b8152506001805461021790610b83565b80601f016020809104026020016040519081016040528092919081815260200182805461024390610b83565b80156102905780601f1061026557610100808354040283529160200191610290565b820191906000526020600020905b81548152906001019060200180831161027357829003601f168201915b50505050506107d9565b6040516102a79190610bbe565b604051908190038120907f88350a00c9d980accf5486d4817c4f938edc6aa8a526efb4c9eaa7e12c69f4cb90600090a492915050565b6003546000906102f5906001600160a01b0316610806565b905090565b6001805461030790610b83565b80601f016020809104026020016040519081016040528092919081815260200182805461033390610b83565b80156103805780601f1061035557610100808354040283529160200191610380565b820191906000526020600020905b81548152906001019060200180831161036357829003601f168201915b505050505081565b60008061039483610880565b9050808361029a6040518060400160405280600481526020016302134b2160e51b8152506001805461021790610b83565b60008060008060009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561041757600080fd5b505afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f9190610bf9565b5093505092505060008060009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a557600080fd5b505afa1580156104b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dd9190610c49565b905060006104ec8483886108b4565b905082817fb6c1393c2251d5f83b6b4923759cf156e72f269dc654f872eab19c92b853cf5e60405160405180910390a395945050505050565b61052f3382610925565b600061053a826101da565b90506105463082610940565b6003546001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101859052606401602060405180830381600087803b1580156105a657600080fd5b505af11580156105ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105de9190610c66565b5060025461010090046001600160a01b031663a9059cbb335b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b15801561063f57600080fd5b505af1158015610653573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106779190610c66565b506040518190839033907f42daeb9fe1f789384a4e1fd40506a3a12cec73b4c4ea3302b3c501c8e044aebb90600090a45050565b6002546000906102f59061010090046001600160a01b0316610806565b6106d23382610940565b60006106dd82610388565b90506106e93082610925565b60025461010090046001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101859052606401602060405180830381600087803b15801561074e57600080fd5b505af1158015610762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107869190610c66565b506003546001600160a01b031663a9059cbb336105f7565b60025460009081906107b29060ff166103c5565b60025490915081906107c890859060ff1661095c565b6107d29190610c9e565b9392505050565b606082826040516020016107ee929190610cbd565b60405160208183030381529060405290505b92915050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b15801561084857600080fd5b505afa15801561085c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108009190610cec565b60025460009081906108949060ff166103c5565b60025490915081906108aa90859060ff16610976565b6107d29190610d1b565b60008160ff168360ff1610156108ed576108ce8383610d2f565b6108dc9060ff16600a610e36565b6108e69085610e42565b90506107d2565b8160ff168360ff16111561091d576109058284610d2f565b6109139060ff16600a610e36565b6108e69085610ec7565b509192915050565b60035461093c906001600160a01b03168383610990565b5050565b60025461093c9061010090046001600160a01b03168383610990565b600061096c60ff8316600a610e36565b6107d29084610d1b565b600061098660ff8316600a610e36565b6107d29084610c9e565b6040516370a0823160e01b81526001600160a01b0383811660048301528291908516906370a082319060240160206040518083038186803b1580156109d457600080fd5b505afa1580156109e8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0c9190610cec565b1015610aaf6040518060400160405280600b81526020016a02737ba1032b737bab3b4160ad1b815250856001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610a6e57600080fd5b505afa158015610a82573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610aaa9190810190610f0b565b6107d9565b90610ad65760405162461bcd60e51b8152600401610acd9190610b21565b60405180910390fd5b50505050565b600060208284031215610aee57600080fd5b5035919050565b60005b83811015610b10578181015183820152602001610af8565b83811115610ad65750506000910152565b6020815260008251806020840152610b40816040850160208701610af5565b601f01601f19169190910160400192915050565b60ff81168114610b6357600080fd5b50565b600060208284031215610b7857600080fd5b81356107d281610b54565b600181811c90821680610b9757607f821691505b60208210811415610bb857634e487b7160e01b600052602260045260246000fd5b50919050565b60008251610bd0818460208701610af5565b9190910192915050565b805169ffffffffffffffffffff81168114610bf457600080fd5b919050565b600080600080600060a08688031215610c1157600080fd5b610c1a86610bda565b9450602086015193506040860151925060608601519150610c3d60808701610bda565b90509295509295909350565b600060208284031215610c5b57600080fd5b81516107d281610b54565b600060208284031215610c7857600080fd5b815180151581146107d257600080fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610cb857610cb8610c88565b500290565b60008351610ccf818460208801610af5565b835190830190610ce3818360208801610af5565b01949350505050565b600060208284031215610cfe57600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082610d2a57610d2a610d05565b500490565b600060ff821660ff841680821015610d4957610d49610c88565b90039392505050565b600181815b80851115610d8d578160001904821115610d7357610d73610c88565b80851615610d8057918102915b93841c9390800290610d57565b509250929050565b600082610da457506001610800565b81610db157506000610800565b8160018114610dc75760028114610dd157610ded565b6001915050610800565b60ff841115610de257610de2610c88565b50506001821b610800565b5060208310610133831016604e8410600b8410161715610e10575081810a610800565b610e1a8383610d52565b8060001904821115610e2e57610e2e610c88565b029392505050565b60006107d28383610d95565b60006001600160ff1b0381841382841380821686840486111615610e6857610e68610c88565b600160ff1b6000871282811687830589121615610e8757610e87610c88565b60008712925087820587128484161615610ea357610ea3610c88565b87850587128184161615610eb957610eb9610c88565b505050929093029392505050565b600082610ed657610ed6610d05565b600160ff1b821460001984141615610ef057610ef0610c88565b500590565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610f1d57600080fd5b815167ffffffffffffffff80821115610f3557600080fd5b818401915084601f830112610f4957600080fd5b815181811115610f5b57610f5b610ef5565b604051601f8201601f19908116603f01168101908382118183101715610f8357610f83610ef5565b81604052828152876020848701011115610f9c57600080fd5b610fad836020830160208801610af5565b97965050505050505056fea26469706673582212204ebf3ffe6b6373d5ca25667a10feb79672d9045dc4a6e63142a5ffa355ab8bf564736f6c63430008090033";

type ERC20TokensSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokensSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20TokensSwap__factory extends ContractFactory {
  constructor(...args: ERC20TokensSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _baseToken: string,
    _quoteToken: string,
    _exchangeRate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20TokensSwap> {
    return super.deploy(
      _baseToken,
      _quoteToken,
      _exchangeRate,
      overrides || {}
    ) as Promise<ERC20TokensSwap>;
  }
  override getDeployTransaction(
    _baseToken: string,
    _quoteToken: string,
    _exchangeRate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _baseToken,
      _quoteToken,
      _exchangeRate,
      overrides || {}
    );
  }
  override attach(address: string): ERC20TokensSwap {
    return super.attach(address) as ERC20TokensSwap;
  }
  override connect(signer: Signer): ERC20TokensSwap__factory {
    return super.connect(signer) as ERC20TokensSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokensSwapInterface {
    return new utils.Interface(_abi) as ERC20TokensSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20TokensSwap {
    return new Contract(address, _abi, signerOrProvider) as ERC20TokensSwap;
  }
}
