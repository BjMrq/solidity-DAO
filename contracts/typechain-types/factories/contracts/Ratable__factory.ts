/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ratable, RatableInterface } from "../../contracts/Ratable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeedContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "scaledPrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timeStamp",
        type: "uint256",
      },
    ],
    name: "Rate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_scalingDecimal",
        type: "uint8",
      },
    ],
    name: "getScaledRate",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161059838038061059883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610505806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639d0ba18314610030575b600080fd5b61004361003e36600461023a565b610055565b60405190815260200160405180910390f35b60008060008060009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100a757600080fd5b505afa1580156100bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100df9190610276565b5093505092505060008060009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561013557600080fd5b505afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d91906102c6565b9050600061017c8483886101b5565b905082817fb6c1393c2251d5f83b6b4923759cf156e72f269dc654f872eab19c92b853cf5e60405160405180910390a395945050505050565b60008160ff168360ff1610156101ee576101cf83836102f9565b6101dd9060ff16600a610402565b6101e7908561040e565b9050610221565b8160ff168360ff16111561021e5761020682846102f9565b6102149060ff16600a610402565b6101e79085610493565b50825b9392505050565b60ff8116811461023757600080fd5b50565b60006020828403121561024c57600080fd5b813561022181610228565b805169ffffffffffffffffffff8116811461027157600080fd5b919050565b600080600080600060a0868803121561028e57600080fd5b61029786610257565b94506020860151935060408601519250606086015191506102ba60808701610257565b90509295509295909350565b6000602082840312156102d857600080fd5b815161022181610228565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff841680821015610313576103136102e3565b90039392505050565b600181815b8085111561035757816000190482111561033d5761033d6102e3565b8085161561034a57918102915b93841c9390800290610321565b509250929050565b60008261036e575060016103fc565b8161037b575060006103fc565b8160018114610391576002811461039b576103b7565b60019150506103fc565b60ff8411156103ac576103ac6102e3565b50506001821b6103fc565b5060208310610133831016604e8410600b84101617156103da575081810a6103fc565b6103e4838361031c565b80600019048211156103f8576103f86102e3565b0290505b92915050565b6000610221838361035f565b60006001600160ff1b0381841382841380821686840486111615610434576104346102e3565b600160ff1b6000871282811687830589121615610453576104536102e3565b6000871292508782058712848416161561046f5761046f6102e3565b87850587128184161615610485576104856102e3565b505050929093029392505050565b6000826104b057634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156104ca576104ca6102e3565b50059056fea2646970667358221220133fb0a79905881234fa83fd64be974f5c4991d8939e951a1b27b50d1cd1477064736f6c63430008090033";

type RatableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RatableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ratable__factory extends ContractFactory {
  constructor(...args: RatableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _priceFeedContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ratable> {
    return super.deploy(
      _priceFeedContract,
      overrides || {}
    ) as Promise<Ratable>;
  }
  override getDeployTransaction(
    _priceFeedContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_priceFeedContract, overrides || {});
  }
  override attach(address: string): Ratable {
    return super.attach(address) as Ratable;
  }
  override connect(signer: Signer): Ratable__factory {
    return super.connect(signer) as Ratable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RatableInterface {
    return new utils.Interface(_abi) as RatableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Ratable {
    return new Contract(address, _abi, signerOrProvider) as Ratable;
  }
}
