/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EthQuoteSwap,
  EthQuoteSwapInterface,
} from "../../contracts/EthQuoteSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract SatiToken",
        name: "_quoteToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethToUsdRate",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "scaledPrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timeStamp",
        type: "uint256",
      },
    ],
    name: "Rate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "exchangeType",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "sellingAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "buyingAmount",
        type: "uint256",
      },
    ],
    name: "SwapRateInfo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amountSent",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amountReceived",
        type: "uint256",
      },
    ],
    name: "SwapTransferInfo",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseTokenAmount",
        type: "uint256",
      },
    ],
    name: "getAskPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quoteToken",
        type: "uint256",
      },
    ],
    name: "getBidPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_scalingDecimal",
        type: "uint8",
      },
    ],
    name: "getScaledRate",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pairName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quoteToken",
    outputs: [
      {
        internalType: "contract SatiToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseTokenAmount",
        type: "uint256",
      },
    ],
    name: "swapBaseForQuoteToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quoteTokenAmount",
        type: "uint256",
      },
    ],
    name: "swapQuoteForBaseToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type EthQuoteSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthQuoteSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EthQuoteSwap__factory extends ContractFactory {
  constructor(...args: EthQuoteSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _quoteToken: string,
    _ethToUsdRate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EthQuoteSwap> {
    return super.deploy(
      _quoteToken,
      _ethToUsdRate,
      overrides || {}
    ) as Promise<EthQuoteSwap>;
  }
  override getDeployTransaction(
    _quoteToken: string,
    _ethToUsdRate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _quoteToken,
      _ethToUsdRate,
      overrides || {}
    );
  }
  override attach(address: string): EthQuoteSwap {
    return super.attach(address) as EthQuoteSwap;
  }
  override connect(signer: Signer): EthQuoteSwap__factory {
    return super.connect(signer) as EthQuoteSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthQuoteSwapInterface {
    return new utils.Interface(_abi) as EthQuoteSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EthQuoteSwap {
    return new Contract(address, _abi, signerOrProvider) as EthQuoteSwap;
  }
}
