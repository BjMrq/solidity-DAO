/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  KYCValidation,
  KYCValidationInterface,
} from "../../contracts/KYCValidation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "KYCCompletedRegistry",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
    ],
    name: "requireKYCCompletion",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "seKYCCompletedFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "seKYCRevokedFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101ea806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806311e1464b1461005157806337d6c8821461006657806387c1172f1461009d578063b33d5a1f146100cc575b600080fd5b61006461005f366004610184565b6100fe565b005b610089610074366004610184565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b6100646100ab366004610184565b6001600160a01b03166000908152602081905260409020805460ff19169055565b6100646100da366004610184565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b6001600160a01b03811660009081526020819052604090205460ff166101815760405162461bcd60e51b815260206004820152602e60248201527f596f75206d75737420636f6d706c657465204b5943206265666f72652070757260448201526d63686173696e6720746f6b656e7360901b606482015260840160405180910390fd5b50565b60006020828403121561019657600080fd5b81356001600160a01b03811681146101ad57600080fd5b939250505056fea264697066735822122094d3a6c1c4c77b03e6cade4f47635fcb3346e78ee4c03ffeb213030f45eb54f464736f6c63430008090033";

type KYCValidationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KYCValidationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KYCValidation__factory extends ContractFactory {
  constructor(...args: KYCValidationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KYCValidation> {
    return super.deploy(overrides || {}) as Promise<KYCValidation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KYCValidation {
    return super.attach(address) as KYCValidation;
  }
  override connect(signer: Signer): KYCValidation__factory {
    return super.connect(signer) as KYCValidation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KYCValidationInterface {
    return new utils.Interface(_abi) as KYCValidationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KYCValidation {
    return new Contract(address, _abi, signerOrProvider) as KYCValidation;
  }
}
