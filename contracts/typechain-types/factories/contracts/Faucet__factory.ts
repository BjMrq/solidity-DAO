/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Faucet, FaucetInterface } from "../../contracts/Faucet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "Request",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "makeItRain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600180546001600160401b031916662386f26fc1000017905534801561002957600080fd5b50610276806100396000396000f3fe60806040526004361061002d5760003560e01c80635dae4e5014610039578063a4beda631461004357600080fd5b3661003457005b600080fd5b610041610082565b005b34801561004f57600080fd5b5061007061005e3660046101ea565b60006020819052908152604090205481565b60405190815260200160405180910390f35b3360009081526020819052604090205442116100e55760405162461bcd60e51b815260206004820152601960248201527f4c6f636b2074696d6520686173206e6f7420657870697265640000000000000060448201526064015b60405180910390fd5b60015467ffffffffffffffff164710156101315760405162461bcd60e51b815260206004820152600d60248201526c4661756365742069732064727960981b60448201526064016100dc565b600154604051600091339167ffffffffffffffff909116908381818185875af1925050503d8060008114610181576040519150601f19603f3d011682016040523d82523d6000602084013e610186565b606091505b50509050806101ca5760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b60448201526064016100dc565b6101d7426201518061021a565b3360009081526020819052604090205550565b6000602082840312156101fc57600080fd5b81356001600160a01b038116811461021357600080fd5b9392505050565b6000821982111561023b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220541a21f2d7406dd7b9e1104adf65e5fe70c44f455d2208c19146b088f708c03764736f6c63430008090033";

type FaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Faucet__factory extends ContractFactory {
  constructor(...args: FaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Faucet> {
    return super.deploy(overrides || {}) as Promise<Faucet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Faucet {
    return super.attach(address) as Faucet;
  }
  override connect(signer: Signer): Faucet__factory {
    return super.connect(signer) as Faucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetInterface {
    return new utils.Interface(_abi) as FaucetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faucet {
    return new Contract(address, _abi, signerOrProvider) as Faucet;
  }
}
