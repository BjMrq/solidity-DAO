{
  "address": "0x78B87F8BF649d070380EEDf24A23ba20477727e9",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "Request",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "makeItRain",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x7ed07ebfad7a0ec916a589ab3d4198f69ac97ef46207cb5c121249b464498b56",
  "receipt": {
    "to": null,
    "from": "0xAb7F4B57AFdb29A4F7263B662E1D0B4fF94B7f4A",
    "contractAddress": "0x78B87F8BF649d070380EEDf24A23ba20477727e9",
    "transactionIndex": 0,
    "gasUsed": "211747",
    "logsBloom": "0x
    "blockHash": "0xc5ea7dcac9692d6bf17844ee791ab04eeb8413f423d024d6df126355e91ed8f6",
    "transactionHash": "0x7ed07ebfad7a0ec916a589ab3d4198f69ac97ef46207cb5c121249b464498b56",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "211747",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d6cef7200f396fbb18cb40510a942980",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"Request\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"makeItRain\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Faucet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.9;\\n\\ncontract Faucet {\\n  mapping(address => uint256) public lockTime;\\n\\n  uint64 private faucetDistribution = 0.01 ether;\\n\\n  event Request(address _beneficiary, uint256 _balance);\\n\\n  function makeItRain() external payable {\\n    require(block.timestamp > lockTime[msg.sender], \\\"Lock time has not expired\\\");\\n    // require(\\n    //     _beneficiary.balance <= 0.2 ether,\\n    //     \\\"You already have enough ether to play around with\\\"\\n    // );\\n    require(address(this).balance >= faucetDistribution, \\\"Faucet is dry\\\");\\n\\n    (bool success, ) = msg.sender.call{value: faucetDistribution}(\\\"\\\");\\n    require(success, \\\"Transfer failed.\\\");\\n\\n    lockTime[msg.sender] = block.timestamp + 1 days;\\n  }\\n\\n  receive() external payable {}\\n}\\n\",\"keccak256\":\"0xf6e9d0c1afd50888b9d64803c0d25ac4f8536bdc20dd20c9e8cf4481ee2e7103\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600180546001600160401b031916662386f26fc1000017905534801561002957600080fd5b50610276806100396000396000f3fe60806040526004361061002d5760003560e01c80635dae4e5014610039578063a4beda631461004357600080fd5b3661003457005b600080fd5b610041610082565b005b34801561004f57600080fd5b5061007061005e3660046101ea565b60006020819052908152604090205481565b60405190815260200160405180910390f35b3360009081526020819052604090205442116100e55760405162461bcd60e51b815260206004820152601960248201527f4c6f636b2074696d6520686173206e6f7420657870697265640000000000000060448201526064015b60405180910390fd5b60015467ffffffffffffffff164710156101315760405162461bcd60e51b815260206004820152600d60248201526c4661756365742069732064727960981b60448201526064016100dc565b600154604051600091339167ffffffffffffffff909116908381818185875af1925050503d8060008114610181576040519150601f19603f3d011682016040523d82523d6000602084013e610186565b606091505b50509050806101ca5760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b60448201526064016100dc565b6101d7426201518061021a565b3360009081526020819052604090205550565b6000602082840312156101fc57600080fd5b81356001600160a01b038116811461021357600080fd5b9392505050565b6000821982111561023b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220541a21f2d7406dd7b9e1104adf65e5fe70c44f455d2208c19146b088f708c03764736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061002d5760003560e01c80635dae4e5014610039578063a4beda631461004357600080fd5b3661003457005b600080fd5b610041610082565b005b34801561004f57600080fd5b5061007061005e3660046101ea565b60006020819052908152604090205481565b60405190815260200160405180910390f35b3360009081526020819052604090205442116100e55760405162461bcd60e51b815260206004820152601960248201527f4c6f636b2074696d6520686173206e6f7420657870697265640000000000000060448201526064015b60405180910390fd5b60015467ffffffffffffffff164710156101315760405162461bcd60e51b815260206004820152600d60248201526c4661756365742069732064727960981b60448201526064016100dc565b600154604051600091339167ffffffffffffffff909116908381818185875af1925050503d8060008114610181576040519150601f19603f3d011682016040523d82523d6000602084013e610186565b606091505b50509050806101ca5760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b60448201526064016100dc565b6101d7426201518061021a565b3360009081526020819052604090205550565b6000602082840312156101fc57600080fd5b81356001600160a01b038116811461021357600080fd5b9392505050565b6000821982111561023b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220541a21f2d7406dd7b9e1104adf65e5fe70c44f455d2208c19146b088f708c03764736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "lockTime",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 8,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "faucetDistribution",
        "offset": 0,
        "slot": "1",
        "type": "t_uint64"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}